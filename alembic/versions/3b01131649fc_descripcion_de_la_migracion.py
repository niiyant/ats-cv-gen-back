"""descripcion de la migracion

Revision ID: 3b01131649fc
Revises: 
Create Date: 2025-02-17 15:29:05.623770

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3b01131649fc'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_academic_description', table_name='academic')
    op.drop_index('ix_academic_id', table_name='academic')
    op.drop_index('ix_academic_institution', table_name='academic')
    op.drop_index('ix_academic_title', table_name='academic')
    op.drop_table('academic')
    op.drop_index('ix_certifications_description', table_name='certifications')
    op.drop_index('ix_certifications_id', table_name='certifications')
    op.drop_index('ix_certifications_institution', table_name='certifications')
    op.drop_index('ix_certifications_name', table_name='certifications')
    op.drop_table('certifications')
    op.drop_index('ix_profile_id', table_name='profile')
    op.drop_index('ix_profile_name', table_name='profile')
    op.drop_index('ix_profile_url', table_name='profile')
    op.drop_table('profile')
    op.drop_index('ix_soft_skill_id', table_name='soft_skill')
    op.drop_index('ix_soft_skill_title', table_name='soft_skill')
    op.drop_table('soft_skill')
    op.drop_index('ix_cv_id', table_name='cv')
    op.drop_index('ix_cv_role', table_name='cv')
    op.drop_index('ix_cv_summary', table_name='cv')
    op.drop_index('ix_cv_telephone', table_name='cv')
    op.drop_table('cv')
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_first_name', table_name='users')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_index('ix_users_last_name', table_name='users')
    op.drop_table('users')
    op.drop_index('ix_experience_company', table_name='experience')
    op.drop_index('ix_experience_description', table_name='experience')
    op.drop_index('ix_experience_id', table_name='experience')
    op.drop_index('ix_experience_role', table_name='experience')
    op.drop_table('experience')
    op.drop_index('ix_skill_id', table_name='skill')
    op.drop_index('ix_skill_level', table_name='skill')
    op.drop_index('ix_skill_title', table_name='skill')
    op.drop_table('skill')
    op.drop_index('ix_language_id', table_name='language')
    op.drop_index('ix_language_level', table_name='language')
    op.drop_index('ix_language_speech', table_name='language')
    op.drop_table('language')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('language',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('cv_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('speech', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('level', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['cv_id'], ['cv.id'], name='language_cv_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='language_pkey')
    )
    op.create_index('ix_language_speech', 'language', ['speech'], unique=False)
    op.create_index('ix_language_level', 'language', ['level'], unique=False)
    op.create_index('ix_language_id', 'language', ['id'], unique=False)
    op.create_table('skill',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('cv_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('level', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['cv_id'], ['cv.id'], name='skill_cv_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='skill_pkey')
    )
    op.create_index('ix_skill_title', 'skill', ['title'], unique=False)
    op.create_index('ix_skill_level', 'skill', ['level'], unique=False)
    op.create_index('ix_skill_id', 'skill', ['id'], unique=False)
    op.create_table('experience',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('cv_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('role', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('company', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('start_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('end_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['cv_id'], ['cv.id'], name='experience_cv_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='experience_pkey')
    )
    op.create_index('ix_experience_role', 'experience', ['role'], unique=False)
    op.create_index('ix_experience_id', 'experience', ['id'], unique=False)
    op.create_index('ix_experience_description', 'experience', ['description'], unique=False)
    op.create_index('ix_experience_company', 'experience', ['company'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('password_hash', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_users_last_name', 'users', ['last_name'], unique=False)
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_index('ix_users_first_name', 'users', ['first_name'], unique=False)
    op.create_index('ix_users_email', 'users', ['email'], unique=True)
    op.create_table('cv',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('telephone', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('role', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('summary', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='cv_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='cv_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_cv_telephone', 'cv', ['telephone'], unique=False)
    op.create_index('ix_cv_summary', 'cv', ['summary'], unique=True)
    op.create_index('ix_cv_role', 'cv', ['role'], unique=False)
    op.create_index('ix_cv_id', 'cv', ['id'], unique=False)
    op.create_table('soft_skill',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('cv_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['cv_id'], ['cv.id'], name='soft_skill_cv_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='soft_skill_pkey')
    )
    op.create_index('ix_soft_skill_title', 'soft_skill', ['title'], unique=False)
    op.create_index('ix_soft_skill_id', 'soft_skill', ['id'], unique=False)
    op.create_table('profile',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('cv_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['cv_id'], ['cv.id'], name='profile_cv_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='profile_pkey')
    )
    op.create_index('ix_profile_url', 'profile', ['url'], unique=False)
    op.create_index('ix_profile_name', 'profile', ['name'], unique=False)
    op.create_index('ix_profile_id', 'profile', ['id'], unique=False)
    op.create_table('certifications',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('cv_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('institution', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['cv_id'], ['cv.id'], name='certifications_cv_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='certifications_pkey')
    )
    op.create_index('ix_certifications_name', 'certifications', ['name'], unique=False)
    op.create_index('ix_certifications_institution', 'certifications', ['institution'], unique=False)
    op.create_index('ix_certifications_id', 'certifications', ['id'], unique=False)
    op.create_index('ix_certifications_description', 'certifications', ['description'], unique=False)
    op.create_table('academic',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('cv_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('institution', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('start_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('end_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['cv_id'], ['cv.id'], name='academic_cv_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='academic_pkey')
    )
    op.create_index('ix_academic_title', 'academic', ['title'], unique=False)
    op.create_index('ix_academic_institution', 'academic', ['institution'], unique=False)
    op.create_index('ix_academic_id', 'academic', ['id'], unique=False)
    op.create_index('ix_academic_description', 'academic', ['description'], unique=False)
    # ### end Alembic commands ###
